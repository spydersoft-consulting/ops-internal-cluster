mimir-distributed:
  global:
    dnsServer: core-dns
    dnsNamespace: kube-system
    extraEnvFrom:
      - secretRef:
          name: mimir-minio-secret
  minio: 
    enabled: false
  alertmanager:
    enabled: true
    persistentVolume:
      storageClass: nfs-client
  distributor:
    replicas: 2
  ingester:
    replicas: 3
    persistentVolume:
      storageClass: nfs-client
  store_gateway:
    replicas: 3
    persistentVolume:
      storageClass: nfs-client
  compactor:
    persistentVolume:
      storageClass: nfs-client
  chunks-cache:
    enabled: false
    replicas: 2
  index-cache:
    enabled: false
    replicas: 3
  results-cache:
    enabled: false
    replicas: 2
  ruler:
    enabled: true
  nginx:
    ingress:
      enabled: true
      hosts:
        - host: "mimir.mattgerega.net"
          paths:
            - path: /
              pathType: Prefix
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/service-upstream: "true"
      tls: []
  mimir:
    structuredConfig:
      alertmanager_storage:
        backend: s3
        s3:
          access_key_id: ${MINIO_USERNAME}
          bucket_name: mimir-ruler
          endpoint: cloud.gerega.net:39000
          insecure: true
          secret_access_key: ${MINIO_PASSWORD}
      blocks_storage:
        s3:
          access_key_id: ${MINIO_USERNAME}
          bucket_name: mimir-tsdb
          endpoint: cloud.gerega.net:39000
          insecure: true
          secret_access_key: ${MINIO_PASSWORD}
      ruler_storage:
        backend: s3
        s3:
          access_key_id: ${MINIO_USERNAME}
          bucket_name: mimir-ruler
          endpoint: cloud.gerega.net:39000
          insecure: true
          secret_access_key: ${MINIO_PASSWORD}
      limits:
        max_global_series_per_user: 0
        ingestion_rate: 400000
        ingestion_burst_size: 1000000
        out_of_order_time_window: 
  metaMonitoring:
    serviceMonitor:
      enabled: true
      interval: 1m
      scrapeTimeout: 30s
